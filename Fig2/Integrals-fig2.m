(* ::Package:: *)

(* ::Input:: *)
(*Clear["Global`*"]*)
(*(*----parameters specification---*)*)
(* bm=1;k=1;mult=1;w=Pi/(8.90 mult) (*--for bacteria--*);tf=23  mult;dt=7.2  mult;wc=w;(*--period for the csfb 12h--*)*)
(*ts=fia;*)
(*mu1=1;mu2=mu1;v1=1;v2=v1;*)
(*xout=1; lm=xout;dd=1;*)
(*(*---define the time shift---*)*)
(*fia=3;fib=1;*)
(*f[nu_,beta_]:={*)
(**)
(*vecinit=RandomReal[1,ts];*)
(**)
(*Do[res=Table[*)
(*bm1=bm Cos[w (t-dt-fib)/2]^2;*)
(*(*---*)*)
(*csfb=bm Cos[wc (t-dt)/2]^2;*)
(**)
(*cm=bm1;*)
(*aa[x_]=a1(1-x);*)
(*b01[y_]=bm1 Exp[-(a1/2)(1-y)^2];*)
(*cc[x_]=(bm1+a1 cm-(bm1) E^(-(1/2) a1 (-1+x)^2))/a1-((bm1) Sqrt[\[Pi]/2] (-1+x) Erf[(Sqrt[a1] (-1+x))/Sqrt[2]])/Sqrt[a1];*)
(*(*--as of July 2022, ts equals Phi_a--*)*)
(*If[ts==0,a1=a1/.FindRoot[a1==(1-nu)beta bm Cos[w (t-dt)/2]^2+*)
(*nu beta cc[0],{a1,1,20}][[1]];*)
(*bm1=bm Cos[w (t-dt-fib)/2]^2;*)
(*(*---*)*)
(*csfb=bm Cos[w (t-dt)/2]^2;*)
(**)
(*cm=bm1;*)
(*aa[x_]=a1(1-x);*)
(*b01[y_]=bm1 Exp[-(a1/2)(1-y)^2];*)
(*cc[x_]=(bm1+a1 cm-(bm1) E^(-(1/2) a1 (-1+x)^2))/a1-((bm1) Sqrt[\[Pi]/2] (-1+x) Erf[(Sqrt[a1] (-1+x))/Sqrt[2]])/Sqrt[a1];*)
(*];*)
(*If[ts!=0,*)
(*ct[ti_]=If[ti<ts,vecinit[[ti+1]],cp[ti-ts]];*)
(*bm1=bm Cos[w (t-dt-fib)/2]^2;*)
(*(*---*)*)
(*csfb=bm Cos[wc ( t-dt)/2]^2;*)
(**)
(*cm=bm1;*)
(*(*----*)*)
(*a1=(1-nu)beta bm Cos[wc (t-dt-fia)/2]^2+*)
(*nu beta ct[t];*)
(*(*----*)*)
(*aa[x_]=a1(1-x);*)
(*b01[y_]=bm1 Exp[-(a1/2)(1-y)^2];*)
(*cc[x_]=(bm1+a1 cm-(bm1) E^(-(1/2) a1 (-1+x)^2))/a1-((bm1) Sqrt[\[Pi]/2] (-1+x) Erf[(Sqrt[a1] (-1+x))/Sqrt[2]])/Sqrt[a1];*)
(**)
(*cp[t]=cc[0];];*)
(*vr={nu,ts,t,ct[t],cc[0],aa[0],b01[0],bm1//N,csfb//N,cc[0]};*)
(*Clear[a1,b1,b2,c1,c2];*)
(*vr,{t,0,tf,1}];*)
(*vecinit=Table[cp[j],{j,tf-ts+1,tf,1}];,{h,1,2,1}];*)
(*listb0=Table[{Part[res,i][[3]],Part[res,i][[7]]},{i,1,Length[res],1}];*)
(*lista0=Table[{Part[res,i][[3]],Part[res,i][[6]]},{i,1,Length[res],1}];*)
(*intB=Integrate[Interpolation[listb0][x],{x,0,Length[listb0]-1}];*)
(*intA=Integrate[Interpolation[lista0][x],{x,0,Length[listb0]-1}];*)
(*output={nu,intA,intB};*)
(*output*)
(*};*)
(*master=Flatten[Table[f[i,j][[1]],{j,1,1,1},{i,0.0,1,0.025}],1];*)
(*master2=master;*)
(**)
(*tabA=Table[{master2[[i]][[1]],master2[[i]][[2]]},{i,1,Length[master2],1}];*)
(*tabB=Table[{master2[[i]][[1]],master2[[i]][[3]]},{i,1,Length[master2],1}];*)
(*tabProd=Table[{master2[[i]][[1]],master2[[i]][[2]]master2[[i]][[3]]},{i,1,Length[master2],1}];*)
(**)
(**)


(* ::Input:: *)
(**)
(*StringReplace[ToString[tabB],{"}, {"->"),(","{{"->"(","}}"-> ")"}]*)
